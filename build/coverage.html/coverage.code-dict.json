{"/home/travis/build/npmtest/node-npmtest-cors-anywhere/test.js":"/* istanbul instrument in package npmtest_cors_anywhere */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireExampleJsFromReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-cors-anywhere/lib.npmtest_cors_anywhere.js":"/* istanbul instrument in package npmtest_cors_anywhere */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_cors_anywhere = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_cors_anywhere = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-cors-anywhere/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-cors-anywhere && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_cors_anywhere */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_cors_anywhere\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_cors_anywhere.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        local.assetsDict['/assets.npmtest_cors_anywhere.rollup.js'] =\n            local.assetsDict['/assets.npmtest_cors_anywhere.rollup.js'] ||\n            local.fs.readFileSync(\n                // buildCustomOrg-hack\n                local.npmtest_cors_anywhere.__dirname +\n                    '/lib.npmtest_cors_anywhere.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-cors-anywhere/node_modules/cors-anywhere/lib/cors-anywhere.js":"// © 2013 - 2016 Rob Wu <rob@robwu.nl>\n// Released under the MIT license\n\n'use strict';\n\nvar httpProxy = require('http-proxy');\nvar net = require('net');\nvar url = require('url');\nvar regexp_tld = require('./regexp-top-level-domain');\nvar getProxyForUrl = require('proxy-from-env').getProxyForUrl;\n\nvar help_text = {};\nfunction showUsage(help_file, headers, response) {\n  var isHtml = /\\.html$/.test(help_file);\n  headers['content-type'] = isHtml ? 'text/html' : 'text/plain';\n  if (help_text[help_file] != null) {\n    response.writeHead(200, headers);\n    response.end(help_text[help_file]);\n  } else {\n    require('fs').readFile(help_file, 'utf8', function(err, data) {\n      if (err) {\n        console.error(err);\n        response.writeHead(500, headers);\n        response.end();\n      } else {\n        help_text[help_file] = data;\n        showUsage(help_file, headers, response); // Recursive call, but since data is a string, the recursion will end\n      }\n    });\n  }\n}\n\n/**\n * Check whether the specified hostname is valid.\n *\n * @param hostname {string} Host name (excluding port) of requested resource.\n * @return {boolean} Whether the requested resource can be accessed.\n */\nfunction isValidHostName(hostname) {\n  return !!(\n    regexp_tld.test(hostname) ||\n    net.isIPv4(hostname) ||\n    net.isIPv6(hostname)\n  );\n}\n\n/**\n * Adds CORS headers to the response headers.\n *\n * @param headers {object} Response headers\n * @param request {ServerRequest}\n */\nfunction withCORS(headers, request) {\n  headers['access-control-allow-origin'] = '*';\n  if (request.headers['access-control-request-method']) {\n    headers['access-control-allow-methods'] = request.headers['access-control-request-method'];\n    delete request.headers['access-control-request-method'];\n  }\n  if (request.headers['access-control-request-headers']) {\n    headers['access-control-allow-headers'] = request.headers['access-control-request-headers'];\n    delete request.headers['access-control-request-headers'];\n  }\n\n  headers['access-control-expose-headers'] = Object.keys(headers).join(',');\n\n  return headers;\n}\n\n/**\n * Performs the actual proxy request.\n *\n * @param req {ServerRequest} Incoming http request\n * @param res {ServerResponse} Outgoing (proxied) http request\n * @param proxy {HttpProxy}\n */\nfunction proxyRequest(req, res, proxy) {\n  var location = req.corsAnywhereRequestState.location;\n  req.url = location.path;\n\n  var proxyOptions = {\n    changeOrigin: false,\n    prependPath: false,\n    target: location,\n    headers: {\n      host: location.host,\n    },\n  };\n  var proxyThroughUrl = req.corsAnywhereRequestState.getProxyForUrl(location.href);\n  if (proxyThroughUrl) {\n    proxyOptions.target = proxyThroughUrl;\n    proxyOptions.toProxy = true;\n    // If a proxy URL was set, req.url must be an absolute URL. Then the request will not be sent\n    // directly to the proxied URL, but through another proxy.\n    req.url = location.href;\n  }\n\n  // Start proxying the request\n  proxy.web(req, res, proxyOptions);\n}\n\n/**\n * \"Allow observer to modify headers or abort response\"\n * https://github.com/nodejitsu/node-http-proxy/blob/v1.11.1/lib/http-proxy/passes/web-incoming.js#L147\n *\n * This method modifies the response headers of the proxied response.\n * If a redirect is detected, the response is not sent to the client,\n * and a new request is initiated.\n *\n * @param response {ClientRequest} The response of the proxied request\n * @param req {IncomingMessage} Incoming HTTP request, augmented with property corsAnywhereRequestState\n * @param req.corsAnywhereRequestState {object}\n * @param req.corsAnywhereRequestState.location {object} See parseURL\n * @param req.corsAnywhereRequestState.getProxyForUrl {function} See proxyRequest\n * @param req.corsAnywhereRequestState.proxyBaseUrl {string} Base URL of the CORS API endpoint\n * @param req.corsAnywhereRequestState.maxRedirects {number} Maximum number of redirects\n * @param req.corsAnywhereRequestState.redirectCount_ {number} Internally used to count redirects\n * @param res {ServerResponse} Outgoing (proxied) HTTP request\n *\n * @this {HttpProxy}\n */\nfunction onProxyResponse(response, req, res) {\n  var proxy = this;\n  var requestState = req.corsAnywhereRequestState;\n\n  var statusCode = response.statusCode;\n\n  if (!requestState.redirectCount_) {\n    res.setHeader('x-request-url', requestState.location.href);\n  }\n  // Handle redirects\n  if (statusCode === 301 || statusCode === 302 || statusCode === 303 || statusCode === 307 || statusCode === 308) {\n    var locationHeader = response.headers.location;\n    if (locationHeader) {\n      locationHeader = url.resolve(requestState.location.href, locationHeader);\n\n      if (statusCode === 301 || statusCode === 302 || statusCode === 303) {\n        // Exclude 307 & 308, because they are rare, and require preserving the method + request body\n        requestState.redirectCount_ = requestState.redirectCount_ + 1 || 1;\n        if (requestState.redirectCount_ <= requestState.maxRedirects) {\n          // Handle redirects within the server, because some clients (e.g. Android Stock Browser)\n          // cancel redirects.\n          // Set header for debugging purposes. Do not try to parse it!\n          res.setHeader('X-CORS-Redirect-' + requestState.redirectCount_, statusCode + ' ' + locationHeader);\n\n          req.method = 'GET';\n          req.headers['content-length'] = '0';\n          delete req.headers['content-type'];\n          requestState.location = parseURL(locationHeader);\n\n          // ### Dispose the current proxied request\n          // Haha - hack! This should be fixed when (if?) node-http-proxy supports cancelation of requests..\n          // Shadow all methods that mutate the |res| object.\n          // See https://github.com/nodejitsu/node-http-proxy/blob/v1.11.1/lib/http-proxy/passes/web-outgoing.js#L73-L100\n          var setHeader = res.setHeader;\n          var writeHead = res.writeHead;\n          res.setHeader = res.writeHead = function noop() {};\n          response.on = function noop2() {};\n          response.pipe = function(res) {\n            res.setHeader = setHeader;\n            res.writeHead = writeHead;\n            // Trigger proxyReq.abort() (this is not of any imporance, it's just used to stop wasting resources.)\n            // https://github.com/nodejitsu/node-http-proxy/blob/v1.11.1/lib/http-proxy/passes/web-incoming.js#L125-L128\n            req.emit('aborted');\n            // Remove all listeners (=reset events to initial state)\n            req.removeAllListeners();\n            // Initiate a new proxy request.\n            proxyRequest(req, res, proxy);\n          };\n          return;\n        }\n      }\n      response.headers.location = requestState.proxyBaseUrl + '/' + locationHeader;\n    }\n  }\n\n  // Strip cookies\n  delete response.headers['set-cookie'];\n  delete response.headers['set-cookie2'];\n\n  response.headers['x-final-url'] = requestState.location.href;\n  withCORS(response.headers, req);\n}\n\n\n/**\n * @param req_url {string} The requested URL (scheme is optional).\n * @return {object} URL parsed using url.parse\n */\nfunction parseURL(req_url) {\n  var match = req_url.match(/^(?:(https?:)?\\/\\/)?(([^\\/?]+?)(?::(\\d{0,5})(?=[\\/?]|$))?)([\\/?][\\S\\s]*|$)/i);\n  //                              ^^^^^^^          ^^^^^^^^      ^^^^^^^                ^^^^^^^^^^^^\n  //                            1:protocol       3:hostname     4:port                 5:path + query string\n  //                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  //                                            2:host\n  if (!match) {\n    return null;\n  }\n  if (!match[1]) {\n    // Scheme is omitted.\n    if (req_url.lastIndexOf('//', 0) === -1) {\n      // \"//\" is omitted.\n      req_url = '//' + req_url;\n    }\n    req_url = (match[4] === '443' ? 'https:' : 'http:') + req_url;\n  }\n  return url.parse(req_url);\n}\n\n// Request handler factory\nfunction getHandler(options, proxy) {\n  var corsAnywhere = {\n    getProxyForUrl: getProxyForUrl, // Function that specifies the proxy to use\n    maxRedirects: 5,                // Maximum number of redirects to be followed.\n    originBlacklist: [],            // Requests from these origins will be blocked.\n    originWhitelist: [],            // If non-empty, requests not from an origin in this list will be blocked.\n    redirectSameOrigin: false,      // Redirect the client to the requested URL for same-origin requests.\n    requireHeader: null,            // Require a header to be set?\n    removeHeaders: [],              // Strip these request headers.\n    setHeaders: {},                 // Set these request headers.\n    helpFile: __dirname + '/help.txt',\n  };\n\n  Object.keys(corsAnywhere).forEach(function(option) {\n    if (Object.prototype.hasOwnProperty.call(options, option)) {\n      corsAnywhere[option] = options[option];\n    }\n  });\n\n  // Convert corsAnywhere.requireHeader to an array of lowercase header names, or null.\n  if (corsAnywhere.requireHeader) {\n    if (typeof corsAnywhere.requireHeader === 'string') {\n      corsAnywhere.requireHeader = [corsAnywhere.requireHeader.toLowerCase()];\n    } else if (!Array.isArray(corsAnywhere.requireHeader) || corsAnywhere.requireHeader.length === 0) {\n      corsAnywhere.requireHeader = null;\n    } else {\n      corsAnywhere.requireHeader = corsAnywhere.requireHeader.map(function(headerName) {\n        return headerName.toLowerCase();\n      });\n    }\n  }\n  var hasRequiredHeaders = function(headers) {\n    return !corsAnywhere.requireHeader || corsAnywhere.requireHeader.some(function(headerName) {\n      return Object.hasOwnProperty.call(headers, headerName);\n    });\n  };\n\n  return function(req, res) {\n    var cors_headers = withCORS({}, req);\n    if (req.method === 'OPTIONS') {\n      // Pre-flight request. Reply successfully:\n      res.writeHead(200, cors_headers);\n      res.end();\n      return;\n    }\n\n    var location = parseURL(req.url.slice(1));\n\n    if (!location) {\n      // Invalid API call. Show how to correctly use the API\n      showUsage(corsAnywhere.helpFile, cors_headers, res);\n      return;\n    }\n\n    if (location.host === 'iscorsneeded') {\n      // Is CORS needed? This path is provided so that API consumers can test whether it's necessary\n      // to use CORS. The server's reply is always No, because if they can read it, then CORS headers\n      // are not necessary.\n      res.writeHead(200, {'Content-Type': 'text/plain'});\n      res.end('no');\n      return;\n    }\n\n    if (location.port > 65535) {\n      // Port is higher than 65535\n      res.writeHead(400, 'Invalid port', cors_headers);\n      res.end('Port number too large: ' + location.port);\n      return;\n    }\n\n    if (!/^\\/https?:/.test(req.url) && !isValidHostName(location.hostname)) {\n      // Don't even try to proxy invalid hosts (such as /favicon.ico, /robots.txt)\n      res.writeHead(404, 'Invalid host', cors_headers);\n      res.end('Invalid host: ' + location.hostname);\n      return;\n    }\n\n    if (!hasRequiredHeaders(req.headers)) {\n      res.writeHead(400, 'Header required', cors_headers);\n      res.end('Missing required request header. Must specify one of: ' + corsAnywhere.requireHeader);\n      return;\n    }\n\n    var origin = req.headers.origin || '';\n    if (corsAnywhere.originBlacklist.indexOf(origin) >= 0) {\n      res.writeHead(403, 'Forbidden', cors_headers);\n      res.end('The origin \"' + origin + '\" was blacklisted by the operator of this proxy.');\n      return;\n    }\n\n    if (corsAnywhere.originWhitelist.length && corsAnywhere.originWhitelist.indexOf(origin) === -1) {\n      res.writeHead(403, 'Forbidden', cors_headers);\n      res.end('The origin \"' + origin + '\" was not whitelisted by the operator of this proxy.');\n      return;\n    }\n\n    if (corsAnywhere.redirectSameOrigin && origin && location.href[origin.length] === '/' &&\n        location.href.lastIndexOf(origin, 0) === 0) {\n      // Send a permanent redirect to offload the server. Badly coded clients should not waste our resources.\n      cors_headers.vary = 'origin';\n      cors_headers['cache-control'] = 'private';\n      cors_headers.location = location.href;\n      res.writeHead(301, 'Please use a direct request', cors_headers);\n      res.end();\n      return;\n    }\n\n    var isRequestedOverHttps = req.connection.encrypted || /^\\s*https/.test(req.headers['x-forwarded-proto']);\n    var proxyBaseUrl = (isRequestedOverHttps ? 'https://' : 'http://') + req.headers.host;\n\n    corsAnywhere.removeHeaders.forEach(function(header) {\n      delete req.headers[header];\n    });\n\n    Object.keys(corsAnywhere.setHeaders).forEach(function(header) {\n      req.headers[header] = corsAnywhere.setHeaders[header];\n    });\n\n    req.corsAnywhereRequestState = {\n      location: location,\n      getProxyForUrl: corsAnywhere.getProxyForUrl,\n      maxRedirects: corsAnywhere.maxRedirects,\n      proxyBaseUrl: proxyBaseUrl,\n    };\n\n    proxyRequest(req, res, proxy);\n  };\n}\n\n// Create server with default and given values\n// Creator still needs to call .listen()\nexports.createServer = function createServer(options) {\n  options = options || {};\n\n  // Default options:\n  var httpProxyOptions = {\n    xfwd: true,            // Append X-Forwarded-* headers\n  };\n  // Allow user to override defaults and add own options\n  if (options.httpProxyOptions) {\n    Object.keys(options.httpProxyOptions).forEach(function(option) {\n      httpProxyOptions[option] = options.httpProxyOptions[option];\n    });\n  }\n\n  var proxy = httpProxy.createServer(httpProxyOptions);\n  var requestHandler = getHandler(options, proxy);\n  var server;\n  if (options.httpsOptions) {\n    server = require('https').createServer(options.httpsOptions, requestHandler);\n  } else {\n    server = require('http').createServer(requestHandler);\n  }\n\n  // When the server fails, just show a 404 instead of Internal server error\n  proxy.on('error', function(err, req, res) {\n    if (res.headersSent) {\n      // This could happen when a protocol error occurs when an error occurs\n      // after the headers have been received (and forwarded). Do not write\n      // the headers because it would generate an error.\n      return;\n    }\n    res.writeHead(404, {'Access-Control-Allow-Origin': '*'});\n    res.end('Not found because of proxy error: ' + err);\n  });\n  proxy.on('proxyRes', onProxyResponse);\n\n  return server;\n};\n","/home/travis/build/npmtest/node-npmtest-cors-anywhere/node_modules/cors-anywhere/lib/regexp-top-level-domain.js":"// Based on http://data.iana.org/TLD/tlds-alpha-by-domain.txt\n// '/\\\\.(?:' + document.body.firstChild.textContent.trim().split('\\n').slice(1).join('|') + ')$/i';\n\n/* eslint max-len:0 */\n\n// # Version 2016021800, Last Updated Thu Feb 18 07:07:01 2016 UTC\nvar regexp = /\\.(?:AAA|AARP|ABB|ABBOTT|ABOGADO|AC|ACADEMY|ACCENTURE|ACCOUNTANT|ACCOUNTANTS|ACO|ACTIVE|ACTOR|AD|ADAC|ADS|ADULT|AE|AEG|AERO|AF|AFL|AG|AGENCY|AI|AIG|AIRFORCE|AIRTEL|AL|ALIBABA|ALIPAY|ALLFINANZ|ALSACE|AM|AMICA|AMSTERDAM|ANALYTICS|ANDROID|AO|APARTMENTS|APP|APPLE|AQ|AQUARELLE|AR|ARAMCO|ARCHI|ARMY|ARPA|ARTE|AS|ASIA|ASSOCIATES|AT|ATTORNEY|AU|AUCTION|AUDI|AUDIO|AUTHOR|AUTO|AUTOS|AW|AX|AXA|AZ|AZURE|BA|BAIDU|BAND|BANK|BAR|BARCELONA|BARCLAYCARD|BARCLAYS|BARGAINS|BAUHAUS|BAYERN|BB|BBC|BBVA|BCN|BD|BE|BEATS|BEER|BENTLEY|BERLIN|BEST|BET|BF|BG|BH|BHARTI|BI|BIBLE|BID|BIKE|BING|BINGO|BIO|BIZ|BJ|BLACK|BLACKFRIDAY|BLOOMBERG|BLUE|BM|BMS|BMW|BN|BNL|BNPPARIBAS|BO|BOATS|BOEHRINGER|BOM|BOND|BOO|BOOK|BOOTS|BOSCH|BOSTIK|BOT|BOUTIQUE|BR|BRADESCO|BRIDGESTONE|BROADWAY|BROKER|BROTHER|BRUSSELS|BS|BT|BUDAPEST|BUGATTI|BUILD|BUILDERS|BUSINESS|BUY|BUZZ|BV|BW|BY|BZ|BZH|CA|CAB|CAFE|CAL|CALL|CAMERA|CAMP|CANCERRESEARCH|CANON|CAPETOWN|CAPITAL|CAR|CARAVAN|CARDS|CARE|CAREER|CAREERS|CARS|CARTIER|CASA|CASH|CASINO|CAT|CATERING|CBA|CBN|CC|CD|CEB|CENTER|CEO|CERN|CF|CFA|CFD|CG|CH|CHANEL|CHANNEL|CHAT|CHEAP|CHLOE|CHRISTMAS|CHROME|CHURCH|CI|CIPRIANI|CIRCLE|CISCO|CITIC|CITY|CITYEATS|CK|CL|CLAIMS|CLEANING|CLICK|CLINIC|CLINIQUE|CLOTHING|CLOUD|CLUB|CLUBMED|CM|CN|CO|COACH|CODES|COFFEE|COLLEGE|COLOGNE|COM|COMMBANK|COMMUNITY|COMPANY|COMPARE|COMPUTER|COMSEC|CONDOS|CONSTRUCTION|CONSULTING|CONTACT|CONTRACTORS|COOKING|COOL|COOP|CORSICA|COUNTRY|COUPONS|COURSES|CR|CREDIT|CREDITCARD|CREDITUNION|CRICKET|CROWN|CRS|CRUISES|CSC|CU|CUISINELLA|CV|CW|CX|CY|CYMRU|CYOU|CZ|DABUR|DAD|DANCE|DATE|DATING|DATSUN|DAY|DCLK|DE|DEALER|DEALS|DEGREE|DELIVERY|DELL|DELOITTE|DELTA|DEMOCRAT|DENTAL|DENTIST|DESI|DESIGN|DEV|DIAMONDS|DIET|DIGITAL|DIRECT|DIRECTORY|DISCOUNT|DJ|DK|DM|DNP|DO|DOCS|DOG|DOHA|DOMAINS|DOOSAN|DOWNLOAD|DRIVE|DUBAI|DURBAN|DVAG|DZ|EARTH|EAT|EC|EDEKA|EDU|EDUCATION|EE|EG|EMAIL|EMERCK|ENERGY|ENGINEER|ENGINEERING|ENTERPRISES|EPSON|EQUIPMENT|ER|ERNI|ES|ESQ|ESTATE|ET|EU|EUROVISION|EUS|EVENTS|EVERBANK|EXCHANGE|EXPERT|EXPOSED|EXPRESS|FAGE|FAIL|FAIRWINDS|FAITH|FAMILY|FAN|FANS|FARM|FASHION|FAST|FEEDBACK|FERRERO|FI|FILM|FINAL|FINANCE|FINANCIAL|FIRESTONE|FIRMDALE|FISH|FISHING|FIT|FITNESS|FJ|FK|FLICKR|FLIGHTS|FLORIST|FLOWERS|FLSMIDTH|FLY|FM|FO|FOO|FOOTBALL|FORD|FOREX|FORSALE|FORUM|FOUNDATION|FOX|FR|FRESENIUS|FRL|FROGANS|FRONTIER|FUND|FURNITURE|FUTBOL|FYI|GA|GAL|GALLERY|GALLUP|GAME|GARDEN|GB|GBIZ|GD|GDN|GE|GEA|GENT|GENTING|GF|GG|GGEE|GH|GI|GIFT|GIFTS|GIVES|GIVING|GL|GLASS|GLE|GLOBAL|GLOBO|GM|GMAIL|GMO|GMX|GN|GOLD|GOLDPOINT|GOLF|GOO|GOOG|GOOGLE|GOP|GOT|GOV|GP|GQ|GR|GRAINGER|GRAPHICS|GRATIS|GREEN|GRIPE|GROUP|GS|GT|GU|GUCCI|GUGE|GUIDE|GUITARS|GURU|GW|GY|HAMBURG|HANGOUT|HAUS|HDFCBANK|HEALTH|HEALTHCARE|HELP|HELSINKI|HERE|HERMES|HIPHOP|HITACHI|HIV|HK|HM|HN|HOCKEY|HOLDINGS|HOLIDAY|HOMEDEPOT|HOMES|HONDA|HORSE|HOST|HOSTING|HOTELES|HOTMAIL|HOUSE|HOW|HR|HSBC|HT|HU|HYUNDAI|IBM|ICBC|ICE|ICU|ID|IE|IFM|IINET|IL|IM|IMMO|IMMOBILIEN|IN|INDUSTRIES|INFINITI|INFO|ING|INK|INSTITUTE|INSURANCE|INSURE|INT|INTERNATIONAL|INVESTMENTS|IO|IPIRANGA|IQ|IR|IRISH|IS|ISELECT|IST|ISTANBUL|IT|ITAU|IWC|JAGUAR|JAVA|JCB|JE|JETZT|JEWELRY|JLC|JLL|JM|JMP|JO|JOBS|JOBURG|JOT|JOY|JP|JPRS|JUEGOS|KAUFEN|KDDI|KE|KFH|KG|KH|KI|KIA|KIM|KINDER|KITCHEN|KIWI|KM|KN|KOELN|KOMATSU|KP|KPN|KR|KRD|KRED|KW|KY|KYOTO|KZ|LA|LACAIXA|LAMBORGHINI|LAMER|LANCASTER|LAND|LANDROVER|LANXESS|LASALLE|LAT|LATROBE|LAW|LAWYER|LB|LC|LDS|LEASE|LECLERC|LEGAL|LEXUS|LGBT|LI|LIAISON|LIDL|LIFE|LIFEINSURANCE|LIFESTYLE|LIGHTING|LIKE|LIMITED|LIMO|LINCOLN|LINDE|LINK|LIVE|LIVING|LIXIL|LK|LOAN|LOANS|LOL|LONDON|LOTTE|LOTTO|LOVE|LR|LS|LT|LTD|LTDA|LU|LUPIN|LUXE|LUXURY|LV|LY|MA|MADRID|MAIF|MAISON|MAKEUP|MAN|MANAGEMENT|MANGO|MARKET|MARKETING|MARKETS|MARRIOTT|MBA|MC|MD|ME|MED|MEDIA|MEET|MELBOURNE|MEME|MEMORIAL|MEN|MENU|MEO|MG|MH|MIAMI|MICROSOFT|MIL|MINI|MK|ML|MM|MMA|MN|MO|MOBI|MOBILY|MODA|MOE|MOI|MOM|MONASH|MONEY|MONTBLANC|MORMON|MORTGAGE|MOSCOW|MOTORCYCLES|MOV|MOVIE|MOVISTAR|MP|MQ|MR|MS|MT|MTN|MTPC|MTR|MU|MUSEUM|MUTUELLE|MV|MW|MX|MY|MZ|NA|NADEX|NAGOYA|NAME|NATURA|NAVY|NC|NE|NEC|NET|NETBANK|NETWORK|NEUSTAR|NEW|NEWS|NEXUS|NF|NG|NGO|NHK|NI|NICO|NIKON|NINJA|NISSAN|NL|NO|NOKIA|NORTON|NOWRUZ|NP|NR|NRA|NRW|NTT|NU|NYC|NZ|OBI|OFFICE|OKINAWA|OM|OMEGA|ONE|ONG|ONL|ONLINE|OOO|ORACLE|ORANGE|ORG|ORGANIC|ORIGINS|OSAKA|OTSUKA|OVH|PA|PAGE|PAMPEREDCHEF|PANERAI|PARIS|PARS|PARTNERS|PARTS|PARTY|PE|PET|PF|PG|PH|PHARMACY|PHILIPS|PHOTO|PHOTOGRAPHY|PHOTOS|PHYSIO|PIAGET|PICS|PICTET|PICTURES|PID|PIN|PING|PINK|PIZZA|PK|PL|PLACE|PLAY|PLAYSTATION|PLUMBING|PLUS|PM|PN|POHL|POKER|PORN|POST|PR|PRAXI|PRESS|PRO|PROD|PRODUCTIONS|PROF|PROMO|PROPERTIES|PROPERTY|PROTECTION|PS|PT|PUB|PW|PWC|PY|QA|QPON|QUEBEC|QUEST|RACING|RE|READ|REALTOR|REALTY|RECIPES|RED|REDSTONE|REDUMBRELLA|REHAB|REISE|REISEN|REIT|REN|RENT|RENTALS|REPAIR|REPORT|REPUBLICAN|REST|RESTAURANT|REVIEW|REVIEWS|REXROTH|RICH|RICOH|RIO|RIP|RO|ROCHER|ROCKS|RODEO|ROOM|RS|RSVP|RU|RUHR|RUN|RW|RWE|RYUKYU|SA|SAARLAND|SAFE|SAFETY|SAKURA|SALE|SALON|SAMSUNG|SANDVIK|SANDVIKCOROMANT|SANOFI|SAP|SAPO|SARL|SAS|SAXO|SB|SBS|SC|SCA|SCB|SCHAEFFLER|SCHMIDT|SCHOLARSHIPS|SCHOOL|SCHULE|SCHWARZ|SCIENCE|SCOR|SCOT|SD|SE|SEAT|SECURITY|SEEK|SELECT|SENER|SERVICES|SEVEN|SEW|SEX|SEXY|SFR|SG|SH|SHARP|SHELL|SHIA|SHIKSHA|SHOES|SHOW|SHRIRAM|SI|SINGLES|SITE|SJ|SK|SKI|SKIN|SKY|SKYPE|SL|SM|SMILE|SN|SNCF|SO|SOCCER|SOCIAL|SOFTBANK|SOFTWARE|SOHU|SOLAR|SOLUTIONS|SONY|SOY|SPACE|SPIEGEL|SPREADBETTING|SR|SRL|ST|STADA|STAR|STARHUB|STATEFARM|STATOIL|STC|STCGROUP|STOCKHOLM|STORAGE|STUDIO|STUDY|STYLE|SU|SUCKS|SUPPLIES|SUPPLY|SUPPORT|SURF|SURGERY|SUZUKI|SV|SWATCH|SWISS|SX|SY|SYDNEY|SYMANTEC|SYSTEMS|SZ|TAB|TAIPEI|TAOBAO|TATAMOTORS|TATAR|TATTOO|TAX|TAXI|TC|TCI|TD|TEAM|TECH|TECHNOLOGY|TEL|TELEFONICA|TEMASEK|TENNIS|TF|TG|TH|THD|THEATER|THEATRE|TICKETS|TIENDA|TIFFANY|TIPS|TIRES|TIROL|TJ|TK|TL|TM|TMALL|TN|TO|TODAY|TOKYO|TOOLS|TOP|TORAY|TOSHIBA|TOURS|TOWN|TOYOTA|TOYS|TR|TRADE|TRADING|TRAINING|TRAVEL|TRAVELERS|TRAVELERSINSURANCE|TRUST|TRV|TT|TUBE|TUI|TUSHU|TV|TVS|TW|TZ|UA|UBS|UG|UK|UNICOM|UNIVERSITY|UNO|UOL|US|UY|UZ|VA|VACATIONS|VANA|VC|VE|VEGAS|VENTURES|VERISIGN|VERSICHERUNG|VET|VG|VI|VIAJES|VIDEO|VILLAS|VIN|VIP|VIRGIN|VISION|VISTA|VISTAPRINT|VIVA|VLAANDEREN|VN|VODKA|VOLKSWAGEN|VOTE|VOTING|VOTO|VOYAGE|VU|WALES|WALTER|WANG|WANGGOU|WATCH|WATCHES|WEATHER|WEATHERCHANNEL|WEBCAM|WEBER|WEBSITE|WED|WEDDING|WEIR|WF|WHOSWHO|WIEN|WIKI|WILLIAMHILL|WIN|WINDOWS|WINE|WME|WOLTERSKLUWER|WORK|WORKS|WORLD|WS|WTC|WTF|XBOX|XEROX|XIN|XN--11B4C3D|XN--1QQW23A|XN--30RR7Y|XN--3BST00M|XN--3DS443G|XN--3E0B707E|XN--3PXU8K|XN--42C2D9A|XN--45BRJ9C|XN--45Q11C|XN--4GBRIM|XN--55QW42G|XN--55QX5D|XN--6FRZ82G|XN--6QQ986B3XL|XN--80ADXHKS|XN--80AO21A|XN--80ASEHDB|XN--80ASWG|XN--8Y0A063A|XN--90A3AC|XN--90AIS|XN--9DBQ2A|XN--9ET52U|XN--B4W605FERD|XN--C1AVG|XN--C2BR7G|XN--CG4BKI|XN--CLCHC0EA0B2G2A9GCD|XN--CZR694B|XN--CZRS0T|XN--CZRU2D|XN--D1ACJ3B|XN--D1ALF|XN--E1A4C|XN--ECKVDTC9D|XN--EFVY88H|XN--ESTV75G|XN--FHBEI|XN--FIQ228C5HS|XN--FIQ64B|XN--FIQS8S|XN--FIQZ9S|XN--FJQ720A|XN--FLW351E|XN--FPCRJ9C3D|XN--FZC2C9E2C|XN--G2XX48C|XN--GECRJ9C|XN--H2BRJ9C|XN--HXT814E|XN--I1B6B1A6A2E|XN--IMR513N|XN--IO0A7I|XN--J1AEF|XN--J1AMH|XN--J6W193G|XN--JLQ61U9W7B|XN--KCRX77D1X4A|XN--KPRW13D|XN--KPRY57D|XN--KPU716F|XN--KPUT3I|XN--L1ACC|XN--LGBBAT1AD8J|XN--MGB9AWBF|XN--MGBA3A3EJT|XN--MGBA3A4F16A|XN--MGBAAM7A8H|XN--MGBAB2BD|XN--MGBAYH7GPA|XN--MGBB9FBPOB|XN--MGBBH1A71E|XN--MGBC0A9AZCG|XN--MGBERP4A5D4AR|XN--MGBPL2FH|XN--MGBT3DHD|XN--MGBTX2B|XN--MGBX4CD0AB|XN--MIX891F|XN--MK1BU44C|XN--MXTQ1M|XN--NGBC5AZD|XN--NGBE9E0A|XN--NODE|XN--NQV7F|XN--NQV7FS00EMA|XN--NYQY26A|XN--O3CW4H|XN--OGBPF8FL|XN--P1ACF|XN--P1AI|XN--PBT977C|XN--PGBS0DH|XN--PSSY2U|XN--Q9JYB4C|XN--QCKA1PMC|XN--QXAM|XN--RHQV96G|XN--S9BRJ9C|XN--SES554G|XN--T60B56A|XN--TCKWE|XN--UNUP4Y|XN--VERMGENSBERATER-CTB|XN--VERMGENSBERATUNG-PWB|XN--VHQUV|XN--VUQ861B|XN--WGBH1C|XN--WGBL6A|XN--XHQ521B|XN--XKC2AL3HYE2A|XN--XKC2DL3A5EE0H|XN--Y9A3AQ|XN--YFRO4I67O|XN--YGBI2AMMX|XN--ZFR164B|XPERIA|XXX|XYZ|YACHTS|YAHOO|YAMAXUN|YANDEX|YE|YODOBASHI|YOGA|YOKOHAMA|YOUTUBE|YT|ZA|ZARA|ZERO|ZIP|ZM|ZONE|ZUERICH|ZW)$/i;\nmodule.exports = regexp;\n","/home/travis/build/npmtest/node-npmtest-cors-anywhere/node_modules/cors-anywhere/.del/cors-anywhere-followredir.js":"// © 2013 Rob W <gwnRob@gmail.com>\n// Released under the MIT license\n\nvar httpProxy = require('http-proxy');\nvar net = require('net');\nvar url = require('url');\nvar regexp_tld = require('./regexp-top-level-domain');\n\nvar help_file = __dirname + '/help.txt';\nvar help_text;\nfunction showUsage(headers, response) {\n  headers['content-type'] = 'text/plain';\n  if (help_text != null) {\n    response.writeHead(200, headers);\n    response.end(help_text);\n  } else {\n    require('fs').readFile(help_file, 'utf8', function(err, data) {\n      if (err) {\n        console.error(err);\n        response.writeHead(500, headers);\n        response.end();\n      } else {\n        help_text = data;\n        showUsage(headers, response); // Recursive call, but since data is a string, the recursion will end\n      }\n    });\n  }\n}\n\nfunction hasNoContent(hostname) {\n  // Show 404 for non-requests. For instance when hostname is favicon.ico, robots.txt, ...\n  return !(\n    regexp_tld.test(hostname) ||\n    net.isIPv4(hostname) ||\n    net.isIPv6(hostname)\n  );\n}\n\n// First argument: The response.headers object\n// Second argument: The request object.\nfunction withCORS(headers, request) {\n  var origin = request.headers.origin || 'null';\n  headers['access-control-allow-origin'] = origin === 'null' ? '*' : origin;\n  if (request.headers['access-control-request-method']) {\n    headers['access-control-allow-methods'] = request.headers['access-control-request-method'];\n    delete req.headers['access-control-request-method'];\n  }\n  if (request.headers['access-control-request-headers']) {\n    headers['access-control-allow-headers'] = request.headers['access-control-request-headers'];\n    delete request.headers['access-control-request-headers'];\n  }\n  return headers;\n}\nfunction getProto(req) {\n  return req.isSpdy ? 'https' : (req.connection.pair ? 'https' : 'http');\n}\nfunction _clone(obj) {\n  var clone = {};\n  Object.keys(clone).forEach(function(key) {\n    clone[key] = obj[key];\n  });\n  return clone;\n}\nfunction isForbidden(host) {\n  return /^localhost|0.0.0.0|::1|::|$/i.test(host);\n}\nfunction proxyRequest(req, res, proxy, full_url, proxyOptions, /*internal*/attempts) {\n  if (isForbidden(proxyOptions.host)) {\n    res.writeHead(403, 'Refused to visit', withCORS({'Location': full_url}, req));\n    return;\n  }\n  // Hook res.writeHead method to set the correct header\n  var base_host = getProto(req) + req.headers.host;\n  var original_headers = _clone(req.headers);\n  var res_writeHead = res.writeHead;\n  res.writeHead = function(statusCode, reasonPhrase, headers) {\n    if (typeof reasonPhrase === 'object') {\n      headers = reasonPhrase;\n      reasonPhrase = undefined;\n    }\n    if (!headers) headers = withCORS({}, req);\n    else {\n      withCORS(headers, req);\n      \n      // Handle redirects\n      if (statusCode === 301 || statusCode === 302) {\n        var location = headers.location || headers.Location;\n        if (!location) {\n          return res_writeHead.call(400, statusCode + ' without Location header', headers);\n          return;\n        }\n        location = url.resolve(full_url, location);\n        // Change state of req as if no request has occurred yet.\n        res.writable = false;\n        res.removeAllListeners();\n        req.emit('aborted');\n        req.removeAllListeners();\n        req.url = location;\n        req.headers = original_headers;\n\n        res.writable = true;\n        res.writeHead = res_writeHead;\n        attempts = attempts ? attempts + 1 : 1;\n        if (attempts > 5) { // \"A user agent SHOULD NOT automatically redirect a request more than 5 times\"\n                            // --- http://tools.ietf.org/html/rfc2068#section-10.3\n          res.writeHead(400, 'Maximum redirect count exceeded', headers);\n        } else {\n          var parsed = url.parse(location);\n          proxyOptions = {\n            host: parsed.hostname\n          };\n          proxyOptions.port = +parsed.port || (parsed.protocol === 'https:' ? 443 : 80);\n          proxyRequest(req, res, proxy, location, proxyOptions, attempts);\n        }\n        return;\n      }\n\n      delete headers['set-cookie'];\n      delete headers['set-cookie2'];\n    }\n    return res_writeHead.call(this, statusCode, reasonPhrase, headers);\n  };\n\n  // Finally, proxy the request\n  proxy.proxyRequest(req, res, proxyOptions);\n}\n\n\n// Called on every request\nvar getHandler = exports.getHandler = function(options) {\n  var corsAnywhere = {\n    withCredentials: false,   // Toggle credentials/cookies\n    requireHeader: null,      // Require a header to be set?\n    removeHeaders: []         // Strip these request headers\n  };\n  if (options) {\n    Object.keys(corsAnywhere).forEach(function(option) {\n      if (Object.prototype.hasOwnProperty.call(options, option)) {\n        corsAnywhere[option] = options[option];\n      }\n    });\n  }\n\n  return function(req, res, proxy) {\n    var cors_headers = withCORS({}, req);\n    if (req.method == 'OPTIONS') {\n      // Pre-flight request. Reply successfully:\n      res.writeHead(200, cors_headers);\n      res.end();\n      return;\n    } else {\n      // Actual request. First, extract the desired URL from the request:\n      var full_url, host, hostname, port, path, match;\n      match = req.url.match(/^\\/(?:(https?:)?\\/\\/)?(([^\\/?]+?)(?::(\\d{0,5})(?=[\\/?]|$))?)([\\/?][\\S\\s]*|$)/i);\n      //                            ^^^^^^^          ^^^^^^^^      ^^^^^^^                ^^^^^^^^^^^^\n      //                          1:protocol       3:hostname     4:port                 5:path + query string\n      //                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n      //                                          2:host\n      if (!match || (match[2].indexOf('.') === -1 && match[2].indexOf(':') === -1) || match[4] > 65535) {\n        // Incorrect usage. Show how to do it correctly.\n        showUsage(cors_headers, res);\n        return;\n      } else if (match[2] === 'iscorsneeded') {\n        // Is CORS needed? This path is provided so that API consumers can test whether it's necessary\n        // to use CORS. The server's reply is always No, because if they can read it, then CORS headers\n        // are not necessary.\n        res.writeHead(200, {'Content-Type': 'text/plain'});\n        res.end('no');\n        return;\n      } else if (match[4] > 65535) {\n        // Port is higher than 65535\n        res.writeHead(400, 'Invalid port', cors_headers);\n        res.end();\n        return;\n      } else if ( hasNoContent(match[3]) ) {\n        // Don't even try to proxy invalid hosts\n        res.writeHead(404, cors_headers);\n        res.end();\n        return;\n      } else if (corsAnywhere.requireHeader != null && req.headers[corsAnywhere.requireHeader.toLowerCase()] == null) {\n        res.writeHead(400, cors_headers);\n        res.end('Missing ' + corsAnywhere.requireHeader + ' header!');\n        return;\n      } else {\n        full_url = match[0].substr(1);\n        host = match[2];\n        hostname = match[3];\n        // Read port from input:  :<port>  /  443 if https  /  80 by default\n        port = match[4] ? +match[4] : (match[1] && match[1].toLowerCase() === 'https:' ? 443 : 80);\n        path = match[5];\n      }\n      // Change the requested path:\n      req.url = path;\n\n      corsAnywhere.removeHeaders.forEach(function(header) {\n        delete req.headers[header];\n      });\n\n      proxyRequest(req, res, proxy, full_url, {\n        host: hostname,\n        port: port\n      });\n    }\n  };\n};\n\n// Create server with default and given values\n// Creator still needs to call .listen()\nvar createServer = exports.createServer = function(options) {\n  if (!options) options = {};\n\n  // Default options:\n  var httpProxyOptions = {\n    changeOrigin: true,         // Change Host request header to match the requested URL instead of the proxy's URL.\n    xforward: {\n      enable: true            // Append X-Forwarded-* headers\n    }\n  };\n  // Allow user to override defaults and add own options\n  if (options.httpProxyOptions) {\n    Object.keys(options.httpProxyOptions).forEach(function(option) {\n      httpProxyOptions[option] = options.httpProxyOptions[option];\n    });\n  }\n\n  var handler = getHandler(options);\n  var server = httpProxy.createServer(httpProxyOptions, handler);\n\n  // When the server fails, just show a 404 instead of Internal server error\n  server.proxy.on('proxyError', function(err, req, res) {\n    res.writeHead(404, {});\n    res.end();\n  });\n\n  return server;\n};\n","/home/travis/build/npmtest/node-npmtest-cors-anywhere/node_modules/cors-anywhere/server.js":"// Heroku defines the environment variable PORT, and requires the binding address to be 0.0.0.0\nvar host = process.env.PORT ? '0.0.0.0' : '127.0.0.1';\nvar port = process.env.PORT || 8080;\n\n// Grab the blacklist from the command-line so that we can update the blacklist without deploying\n// again. CORS Anywhere is open by design, and this blacklist is not used, except for countering\n// immediate abuse (e.g. denial of service). If you want to block all origins except for some,\n// use originWhitelist instead.\nvar originBlacklist = (process.env.CORSANYWHERE_BLACKLIST || '').split(',');\n\nvar cors_proxy = require('./lib/cors-anywhere');\ncors_proxy.createServer({\n  originBlacklist: originBlacklist,\n  requireHeader: ['origin', 'x-requested-with'],\n  removeHeaders: [\n    'cookie',\n    'cookie2',\n    // Strip Heroku-specific headers\n    'x-heroku-queue-wait-time',\n    'x-heroku-queue-depth',\n    'x-heroku-dynos-in-use',\n    'x-request-start',\n  ],\n  redirectSameOrigin: true,\n  httpProxyOptions: {\n    // Do not add X-Forwarded-For, etc. headers, because Heroku already adds it.\n    xfwd: false,\n  },\n}).listen(port, host, function() {\n  console.log('Running CORS Anywhere on ' + host + ':' + port);\n});\n"}